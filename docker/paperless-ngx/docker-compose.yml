# Docker Compose file for running paperless from the docker container registry.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

services:
  paperless-broker:
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - ./appdata/redisdata:/data
    env_file: .env
    environment:
      PUID: ${PUID}
      PGID: ${PGID}

  paperless-db:
    image: docker.io/library/postgres:16
    restart: unless-stopped
    volumes:
      - ./appdata/pgdata:/var/lib/postgresql/data
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PUID: ${PUID}
      PGID: ${PGID}

  paperless-db-backup:
    container_name: paperless-db-backup
    image: prodrigestivill/postgres-backup-local
    restart: always
    env_file: .env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST} # Service name of your Postgres container
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_EXTRA_OPTS: -Z1 --schema=public --blobs
      SCHEDULE: "@daily" # Or "@weekly", "0 0 * * *" for cron expression
      BACKUP_ON_START: "TRUE" # must be in quotes
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      HEALTHCHECK_PORT: 8080
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ./appdata/backups/pgbackups:/backups
    links:
      - paperless-db
    depends_on:
      - paperless-db

  paperless-webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - paperless-db
      - paperless-broker
      - paperless-gotenberg
      - paperless-tika
    ports:
      - "8010:8000"
    volumes:
      - ./appdata/data:/usr/src/paperless/data
      - ${PAPERLESS_MEDIA}:/usr/src/paperless/media
      - ${PAPERLESS_EXPORT}:/usr/src/paperless/export
      - ${PAPERLESS_CONSUME}:/usr/src/paperless/consume
    env_file: .env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6379
      PAPERLESS_DBHOST: paperless-db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
      PUID: ${PUID}
      PGID: ${PGID}

  paperless-gotenberg:
    image: docker.io/gotenberg/gotenberg:8.20
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  paperless-tika:
    image: docker.io/apache/tika:latest
    restart: unless-stopped

